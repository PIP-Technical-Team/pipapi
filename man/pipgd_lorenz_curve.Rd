% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copy_functions.R
\name{pipgd_lorenz_curve}
\alias{pipgd_lorenz_curve}
\title{Lorenz curve}
\usage{
pipgd_lorenz_curve(
  params = NULL,
  welfare = NULL,
  weight = NULL,
  mean = 1,
  times_mean = 1,
  popshare = NULL,
  povline = ifelse(is.null(popshare), mean * times_mean, NA_real_),
  complete = getOption("pipster.return_complete"),
  lorenz = NULL,
  n_bins = 100
)
}
\arguments{
\item{params}{list of parameters}

\item{welfare}{numeric vector of cumulative share of welfare (income/consumption)}

\item{weight}{numeric vector of cumulative share of the population}

\item{mean}{numeric scalar of distribution mean. Default is 1}

\item{times_mean}{factor that multiplies the mean to create a relative poverty line. Default is 1}

\item{popshare}{range (0,1). Share of population. Provide share of population instead of poverty line}

\item{povline}{value of poverty line. Default is the \code{mean} value}

\item{complete}{If TRUE, returns a list a cumulative returns from
previously used \code{get_gd} functions. Default is \code{FALSE}}

\item{lorenz}{either "lb" or "lq"}

\item{n_bins}{atomic double vector of length 1: number of points on the
lorenz curve}
}
\value{
Returns a list which contains:
\itemize{
\item numeric lorenz curve,
\item corresponding points on x-axis,
\item whether lq or lb parameterization, and
\item if \code{complete=TRUE}, also returns all params.
}
}
\description{
Returns the Lorenz curve. User provides the cumulative welfare and
cumulative weight, as well as the number of points on the lorenz curve required.
By default, the best fitting Lorenz parameterization (quadratic or beta) is
selected.
}
\examples{
# Example 1: Generating a Lorenz Curve with default settings
pipgd_lorenz_curve(welfare = pip_gd$L,
                   weight = pip_gd$P)

# Example 2: Specifying the number of bins for the Lorenz Curve
pipgd_lorenz_curve(welfare = pip_gd$L,
                   weight = pip_gd$P,
                   n_bins = 50)

# Example 3: Using pre-calculated parameters
use_params <- pipgd_params(welfare = pip_gd$L,
                           weight = pip_gd$P)
pipgd_lorenz_curve(params = use_params)


# Example 4: Generating Lorenz Curve with a specific Lorenz model(e.g. Lorenz beta)
pipgd_lorenz_curve(params = use_params,
                   lorenz = "lb")


}
